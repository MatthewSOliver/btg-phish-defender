// This file is generated by Gemini. Do not edit it directly.
'use server';
/**
 * @fileOverview A Genkit flow for generating a list of emails (both phishing and safe).
 *
 * - generateEmails - A function that handles the email generation process.
 * - GenerateEmailsInput - The input type for the generateEmails function.
 * - GenerateEmailsOutput - The return type for the generateEmails function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const EmailSchema = z.object({
  sender: z.string().describe('The sender of the email.'),
  subject: z.string().describe('The subject line of the email.'),
  body: z.string().describe('The body content of the email.'),
  isPhishing: z.boolean().describe('Whether the email is a phishing attempt (true) or safe (false).'),
});

export type Email = z.infer<typeof EmailSchema>;

const GenerateEmailsInputSchema = z.object({
  numberOfEmails: z.number().describe('The number of emails to generate (both phishing and safe).'),
});
export type GenerateEmailsInput = z.infer<typeof GenerateEmailsInputSchema>;

const GenerateEmailsOutputSchema = z.array(EmailSchema);
export type GenerateEmailsOutput = z.infer<typeof GenerateEmailsOutputSchema>;

export async function generateEmails(input: GenerateEmailsInput): Promise<GenerateEmailsOutput> {
  return generateEmailsFlow(input);
}

const generateEmailsPrompt = ai.definePrompt({
  name: 'generateEmailsPrompt',
  input: {schema: GenerateEmailsInputSchema},
  output: {schema: GenerateEmailsOutputSchema},
  prompt: `You are an expert in identifying and generating phishing and safe emails.

  Generate a list of emails in JSON format. The number of emails to generate is determined by the input field 'numberOfEmails'.
  Ensure that roughly half of the emails are phishing attempts and the other half are safe.

  Each email object in the JSON array should have the following fields:
  - sender: The sender of the email.
  - subject: The subject line of the email.
  - body: The body content of the email.
  - isPhishing: A boolean value indicating whether the email is a phishing attempt (true) or safe (false).

  Incorporate common phishing markers into the phishing emails, such as suspicious links, urgent requests, and generic greetings.
  Safe emails should appear legitimate and trustworthy.

  Here's the number of emails to generate: {{{numberOfEmails}}}
  Ensure the output is a valid JSON array of email objects.

  Example of the JSON output format:
  [
    {
      "sender": "john.doe@example.com",
      "subject": "Important Update",
      "body": "Dear Customer, ...",
      "isPhishing": false
    },
    {
      "sender": "support@badactor.com",
      "subject": "URGENT: Account Suspension",
      "body": "Your account will be suspended unless ...",
      "isPhishing": true
    }
  ]
  `,
});

const generateEmailsFlow = ai.defineFlow(
  {
    name: 'generateEmailsFlow',
    inputSchema: GenerateEmailsInputSchema,
    outputSchema: GenerateEmailsOutputSchema,
  },
  async input => {
    const {output} = await generateEmailsPrompt(input);
    return output!;
  }
);
